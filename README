=======================================================
AI Engine With PL Example
=======================================================

The AI engine with PL example demonstrates how to use AI engine for scalar
computation, and use PL for data movement. In this example, to run the matrix
multiplication on AI engine, we use standard matrix multiplication algorithm.
The user can change the matrix size and the number of cores utilized at
compile-time. The expected matrix size must be a multiple of 50 (number of
cores used) with the minimum and maximum value as 100x100 and 1200x1200
respectively. Please note that this example is intended to be a proof of
concept only. There can be other ways of implementation, which can leverage
more of the AIE resource and hence can result in better performance figures.

Introduction
============

Consider two matrices A and B, the product of the two, i.e. AxB, is a linear
combination of the columns of A by matrix B. This means that the elements
in a row (i) of A are multiplied with the elements in a column of B (j) and are
summed up to give the corresponding single element in the matrix AxB at i, j.
This means that if A is an n x m matrix and B is an m x p matrix, then the
corresponding product AxB would have dimensions n x p. Note how the number of
columns of A equals the number of rows in B to make the matrix multiplication
possible.

Implementation
==============


Data movement
-------------

The application uses the PLIO attribute to make external memory-mapped
connections to or from global memory. These connections are created between
AIE kernel and the logical global memory port of the hardware platform design
via AXI-Multichannel Direct Memory Access IP in the fabric. In this design,
the buffer descriptors are programmed in the AXI-MCDMA IP to initiate AIE to DDR
read and write transactions in the PS program. The burst-length of the
memory-mapped transaction is 64-bit,and AXI-MCDMAs use physical memory
addressing read/write data from global memory.

+-------------------------------------------------------------------------------------------------------------+
| +----------------------------------------+                      +-----------------------------------------+ |
| |                                        |                      |                                         | |
| |                                        |                      |                                         | |
| |                        +-----------+   |   +--------------+   |   +-----------+                         | |
| |                    +-->------------|   |   |              |   |   |-----------|                         | |
| |                    |   |------------<----->+   AIE Core   +<----->------------|                         | |
| |  +--------------+  |   |-----------|   |   |    Module    |   |   |---------------+   +--------------+  | |
| |  |              +--+   |-----------|   |   |              |   |   |-----------|   |   |              |  | |
| |  |   Tile DMA   |      |-----------|   |   +--------------+   |   |-----------|   +-> |   Tile DMA   |  | |
| |  |              |      |-----------|   |                      |   |-----------|       |              |  | |
| |  +------+-------+      |-----------|   |                      |   |-----------|       +-------+------+  | |
| |         ^              |-----------|   |                      |   |-----------|               |         | |
| |         |              +-----------+   |                      |   +-----------+               |         | |
| |         |               Data Memory    |                      |    Data Memory                |         | |
| |         |                              |                      |                               |         | |
| |         |                              |                      |                               |         | |
| |         |    Memory Module             |                      |               Memory Module   |         | |
| +----------------------------------------+                      +-----------------------------------------+ |
|           |                                      AIE Array                                      |           |
+-------------------------------------------------------------------------------------------------------------+
            |                                                                                     |
+-------------------------------------------------------------------------------------------------------------+
|           |                                                                                     |           |
|           +------------------------+            AIE Shim Row        +---------------------------+           |
|                                    |                                |                                       |
+-------------------------------------------------------------------------------------------------------------+
                                     |                                |
+--------------------------------------------------------------------------------------------------------------+
|                                    |                                |                                        |
|                                    |                                |                                        |
|                                    |                                |                                        |
|                    +----------------------------------------------------------------+                        |
|                    |               |                                |               |                        |
|                    |               |                                v               |                        |
|                    |   +-----------+-----------+        +-----------+-----------+   |                        |
|                    |   |                       |        |                       |   |                        |
|                    |   |    MM2S Data Mover    |        |    S2MM Data Mover    |   |                        |
|                    |   |                       |        |                       |   |                        |
|                    |   +----------+------------+        +------------+----------+   |                        |
|                    |              ^                                  |              |                        |
|                    |              |           AXI-MCDMA IP           |              |                        |
|                    +----------------------------------------------------------------+                        |
|                                   |                                  |                                       |
|                                   |                                  |                                       |
|                                   |                                  |                                       |
|                                   |      Programmable Logic (PL)     |                                       |
+--------------------------------------------------------------------------------------------------------------+
                                    |                                  |
                                    |                                  |
                                    |                                  v
 +----------------------------------+----------------------------------+---------------------------------------+
 |                                                                                                             |
 |                                                Network-on-Chip (NoC)                                        |
 |                                                                                                             |
 +------------------------------------------------------+------------------------------------------------------+
                                                        ^
                                                        |
                                                        v
                                    +--------------------------------------+
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    |--------------------------------------|
                                    +--------------------------------------+

                                                       DDR


Data slicing
------------

To compute matrix multiplication on AIE, matrix A is sliced horizontally and
distributed equally among all the core utilized through the AXI-Stream network.
Matrix B is transposed and feed to the first core in the design element by
element. The first core shares the input matrix B with the next core through the
AXI-Stream connection. As the output received from the cores is in z-order
fashion, hence a re-ordering of the output matrix is expected.

+----------------+            +---------------+              +---------------+
|                |            |               |              |               |
|                |            |               |              |               |
|                |            |               |              |               |
|       A        |      X     |       B       |      =       |       C       |
|                |            |               |              |               |
|                |            |               |              |               |
|                |            |               |              |               |
+----------------+            +---------------+              +---------------+


         +----------------------------------------+            +-----------------------------------------+
         |                                        |            |                                         |
      A0 <---------------------------------------->            |                                         |
         +----------------------------------------+            |  <----------------------------------->  |                +------+
         |                                        |            |                                         |    +----->     |  C1  |
      A1 |                                        |            |                                         |                |      |
         +----------------------------------------+            |                                         |                +------+
         |                                        |            |                    T                    |
      A2 |                                        |            |                   B                     |
         +----------------------------------------+            |                                         |
         |                                        |            |                                         |
      A3 |                                        |            |                                         |
         +----------------------------------------+            |                                         |
         |                                        |            |                                         |
      A4 |                                        |            |                                         |
         +----------------------------------------+            |                                         |
         |                                        |            |                                         |
      A5 |                                        |            |                                         |
         +----------------------------------------+            |                                         |
         |                                        |            |                                         |
      A6 |                                        |            |                                         |
         +----------------------------------------+            |                                         |
         |                                        |            |                                         |
      A7 |                                        |            |                                         |
         +----------------------------------------+            +-----------------------------------------+


Compilation Flow
================

      +----------------+          +------------------+
      |                |          |                  |
      |    xgemm.cpp   |          |   <kernels>.cc   |
      |                |          |                  |
      +--+---------+---+          +-------+----------+
         |         |                      |
         |         |                      |
         |         v                      v
         |     +---+----------------------+-----+
         |     |                                |
         |     |             Vitis              |
         |     |                                |
         |     +---------+-----------------+----+
         |               |                 |
         |               v                 v
         |     +---------+---------+    +--+-----------------------+
         |     |                   |    |                          |
         |     |  aie_control.cpp  |    |         libadf.a         |
         |     |                   |    | elfs, cdos and meta data |
         |     +---+---------------+    |                          |
         |         |                    +---------+----------------+
         |         |                              |
         v         v                              |
+--------+---------+---+                          |
|                      |                          |
|  GCC Cross-Compiler  |                          |
|                      |                          |
+----------+-----------+                          |
           |                                      |
           |                                      v
           |                         +------------+-----------+
           |                         |                        |
           |                         |           V++          |
           |                         |                        |
           |                         +------------------------+
           |                                       |
           v                                       v
+----------+--------------------+     +------------+-----------------------+
|                               |     |                                    |
|   aie-matrix-multiplication   |     |     xclbin containing AIE CDOs     |
|      (Application Binary)     |     |             and ELFs               |
|                               |     |                                    |
+-------------------------------+     +------------------------------------+

There are 2 sets of external interfaces for AI Engine configuration
- AI Engine configuration
	Direct call to AI Engine driver APIs
	CDO parsing APIs
- ELF loading
	Direct call to AI Engine driver to load ELF file

The high-level tool, Vitis, can generate outputs in those 2 formats. Also, the
user can manually implement the application using direct calls and compile the
ELF using the low-level compiler.

The generated aie_control.cpp is cross-compiled to run on the target. The
compiled application loads the generated ELF to the corresponding tile through
AI Engine load ELF API. The AI Engine configuration is done by calling AI
Engine driver APIs directly or pass CDO object through CDO parser library. The
CDO parser is an external component, and the AI Engine software uses the CDO
APIs.

Sample Work Directory Structure
===============================

components/yocto/workspace/sources/aie-matrix-multiplication/
├── aie-matrix-multiplication - Cross-Compiled application binary
├── clean-aie-work.sh - removes log files from Work directory
├── graph_aie_constraints.aiecst - PL constraint file
├── README
├── src
│   ├── kernels
│   │   ├── config.h - user defined parameters
│   │   ├── one_input.cc - first AIE kernel that reads data from PL stream
│   │   ├── one_output.cc - last AIE kernel that sends data to PL stream
│   │   └── two_inputs.cc - subsequent kernels that circulated data and output
│   ├── kernels.h - kernels declaration
│   ├── Makefile.Linux - makefile to build the Linux graph control application.
│   ├── xgemm.cpp - main application runs on the APU
|   |   xgemm_graph.cpp - main application to generate the graph
│   └── xgemm.h - dataflow graph definition
└── Work
    ├── aie
    │   ├── 0_0
    │   │   └── Release
    │   │       └── 0_0 - AIE ELF. Naming convention is <COLUMN_NUMBER>_<ROW_NUMBER> - 1
    │   ├── 0_1
    │   │   └── Release
    │   │       └── 0_1
    │   ├── 0_2
    │   │   └── Release
    │   │       └── 0_2
    │   ├── 0_3
    │   │   └── Release
    │   │       └── 0_3
    .   .
    .   .
    .   .
    .   .
    │   ├── 9_5
    │   │   └── Release
    │   │       └── 9_5
    │   ├── 9_6
    │   │   └── Release
    │   │       └── 9_6
    │   └── 9_7
    │       └── Release
    │           └── 9_7
    └── ps
        ├── cdo
        │   ├── aie_cdo_clock_gating.bin
        │   ├── aie_cdo_debug.bin
        │   ├── aie_cdo_elfs.bin
        │   ├── aie_cdo_enable.bin
        │   ├── aie_cdo_error_handling.bin
        │   ├── aie_cdo_init.bin
        │   ├── aie_cdo_mem_clear.bin
        │   └── aie_cdo_reset.bin
        └── c_rts
            └── aie_control.cpp

Run-time Execution
==================

At run-time, Linux application binary calls AI Engine userspace driver and
(tool generated) run time library, libadf_api.a. AIE userspace drivers
abstract the kernel space driver which handles runtime configurations along
with ELF loading.

                 +--------------------------+
                 |                          |
                 |       Application        |
                 |         binary           |
                 |                          |
                 +------------+-------------+
                              |
User Space                    |
+-----------------------------v-------------------------------+
                +-----------------------------+
                |                             |
                |                             |
                |                             |
                |          libadf_api         |
                |                             |
                |                             |
                |                             |
                +-----------------------------+
                               |
                               |
                +--------------v--------------+
                |                             |
                |   AIE User Space Driver     |
                |                             |
                |    +-----------------+      |
                |    |                 |      |
                |    |        IO       |      |
                |    |                 |      |
                |    +-----------------+      |
                +-----------------------------+
User Space                     |
+-------------------------------------------------------------+
                               |
                   +-----------v------------+
                   |  AIE partition driver  |
                   +------------------------+
                               |
                     +---------v-----------+
                     |  AIE device driver  |
                     +---------------------+
Kernel Space

The userspace talks to AI engine partition to access the partition hardware.

Build Application Using PetaLinux
==================================

By default, the AIE matrix multiplication application is enabled. To
enable/disble, run:

```
petalinux-config -c rootfs

    [*] user packages --->
        [*] aie-matrix-multiplication
```
To rebuild the project run,

petalinux-build.

The generated FIT image will be in images/linux/image.ub.

Sample Output
=============

Follow PetaLinux boot process to launch the Linux on the target.
After you see the Linux login prompt, you can log in with user "root" and
password "root".

The AIE ELFs are installed in the `/lib/firmware/aie` directory.
We will need to go to `/lib/firmware/aie` to run the application.

```
root@xilinx-vck190-2020_2:~# cd /lib/firmware/aie
root@xilinx-vck190-2020_2:/lib/firmware/aie# aie-matrix-multiplication 
[ 1293.446327] [drm] Pid 843 opened device
Matrix size(int32): 1200x1200
[ 1293.450332] [drm] Pid 843 opened device
PLIO MCDMA> allocated matrix A at 0xffff68f52000 (phy addr: 0x67500000)
PLIO MCDMA> allocated matrix B at 0xffff694d0400 (phy addr: 0x67a7e400)
PLIO MCDMA> allocated matrix B transpose at 0xffff69a4e800 (phy addr: 0x67ffc800)
PLIO MCDMA> allocated matrix C at 0xffff69fccc00 (phy addr: 0x6857ac00)
PLIO MCDMA> allocated AIE result at 0xffff6a54b000 (phy addr: 0x68af9000)
PLIO MCDMA> allocated APU result at 0xffff6aac9400 (phy addr: 0x69077400)
PLIO MCDMA> allocated MM2S BD chain #0 at 0xffff6b047800 (phy addr: 0x695f5800)
PLIO MCDMA> allocated S2MM BD chain #0 at 0xffff6b58d800 (phy addr: 0x69b3b800)
PLIO MCDMA> allocated MM2S BD chain #1 at 0xffff6b0f0400 (phy addr: 0x6969e400)
PLIO MCDMA> allocated S2MM BD chain #1 at 0xffff6b5a0400 (phy addr: 0x69b4e400)
PLIO MCDMA> allocated MM2S BD chain #2 at 0xffff6b199000 (phy addr: 0x69747000)
PLIO MCDMA> allocated S2MM BD chain #2 at 0xffff6b5b3000 (phy addr: 0x69b61000)
PLIO MCDMA> allocated MM2S BD chain #3 at 0xffff6b241c00 (phy addr: 0x697efc00)
PLIO MCDMA> allocated S2MM BD chain #3 at 0xffff6b5c5c00 (phy addr: 0x69b73c00)
PLIO MCDMA> allocated MM2S BD chain #4 at 0xffff6b2ea800 (phy addr: 0x69898800)
PLIO MCDMA> allocated S2MM BD chain #4 at 0xffff6b5d8800 (phy addr: 0x69b86800)
PLIO MCDMA> allocated MM2S BD chain #5 at 0xffff6b393400 (phy addr: 0x69941400)
PLIO MCDMA> allocated S2MM BD chain #5 at 0xffff6b5eb400 (phy addr: 0x69b99400)
PLIO MCDMA> allocated MM2S BD chain #6 at 0xffff6b43c000 (phy addr: 0x699ea000)
PLIO MCDMA> allocated S2MM BD chain #6 at 0xffff6b5fe000 (phy addr: 0x69bac000)
PLIO MCDMA> allocated MM2S BD chain #7 at 0xffff6b4e4c00 (phy addr: 0x69a92c00)
PLIO MCDMA> allocated S2MM BD chain #7 at 0xffff6b610c00 (phy addr: 0x69bbec00)
PLIO MCDMA> init_dmas: 0xa4000000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4010000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4020000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4030000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4040000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4050000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4060000, page size: 0x1000
PLIO MCDMA> init_dmas: 0xa4070000, page size: 0x1000
Success!
[ 1791.740316] [drm] Pid 843 closed device
[ 1791.744187] [drm] Pid 843 closed device
root@xilinx-vck190-2020_2:~#
```

Customizing and Rebuilding
==========================
Following are prerequisites if the user wants to make any changes in
software,
  * xgemm repo in Yocto workspace and aiecompiler for any software-related
    changes.
  * PetaLinux.

For cross-compiling the main application, sysroot is required.To get the Linux
sysroot, go to the PetaLinux project directory, run the following command:

```
  $ petalinux-build --sdk
  $ petalinux-package --sysroot
```

The sysroot will be generated in
`images/linux/sdk/sysroots/aarch64-xilinx-linux/` directory.

Now, to pull the xgemm repository using PetaLinux, set the Yocto build tool as
devtool:

```
  $ petalinux-config
    Yocto Settings --->
		Build tool --->
			(*) devtool
  $ petalinux-build -c aie-matrix-multiplication -x modify
```

The xgemm source files can be found in
`components/yocto/workspace/sources/aie-matrix-multiplication/`

As mentioned earlier, the user can change the number of AIE cores utilized for
matrix multiplication. However, since the data memory immediately available to
the core is limited, reducing the number of cores utilized reduces the maximum
matrix size supported by the application. Within the config.h header file
NUM_HW_ROWS and NUM_HW_COLS macro can be set to change the number of cores
utilized. The maximum cores available are 400. With the changes made in the
application, care must be taken by the user that the newly generated
configuration is supported by the underlying hardware design.

To rebuild,
   1. Go to the meta-user demo recipe files directory:
      `project-spec/meta-user-recipes-apps/aie-matrix-multiplication/files`.
   2. Assign values to VITIS_DIR, XILINXD_LICENSE_FILE, SYSROOT, and PFM_XPFM
      in settings.sh script and source settings.sh in a shell session.
   3. Run make to compile AIE dataflow graph, create XCL BIN, and cross-compile
      Linux control application.

Optionally, user can run `clean-aie-work.sh` to clean the Work directory to
remove unnecessary files, only leave the AIE kernels, AIE CDOs, and the
aie_control.cpp file.

The generated Linux binary will be `aie-matrix-multiplication`.

The user can then rebuild petalinux.

NOTE:
 * No hardware change is supported in this version of Vivado for this design.

References
==========
[1] Vivado User Guide - for hardware related design.
[2] Vitis User Guide - for AIE application.
[3] Versal TRM - General subsystem overview.

